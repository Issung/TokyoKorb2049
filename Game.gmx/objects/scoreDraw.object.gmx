<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>scoreDrawDebugSpr</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Variables

secondX = 0             //recommended value: 1
alarmSpeed = 4  
maxDistance = 4         //recommended maximum is 14
//text = "AY"           //recommended full capitalisation 
waitLength = 30 * 1.5   //amount of time for text to sit at 'first frame' of animation

//***********SET COLORS********* I RECCOMMEND USING GML BUDDY TO FIND COLOR VALUE*****
//Open gml buddy &gt; goto draw tab &gt; make color &gt; color pick.      it will give you number value.

colorOne = 16711680     //Color of first text drawn (behind text)
colorTwo = 8388863      //Color of second text drawn (middle text)
colorThree = 255        //Color of third text drawn (front text)

//***********SET COLORS*********


//**********DO NOT TOUCH********
alarm[0] = alarmSpeed
wait = 0
//jumpSize = 25
alphaValue = 1
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>109</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_move_to</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>568</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>616</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>position to draw the score at.</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>gameScore</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///High score gets for each level
readHighScore = 0
if instance_exists(level1IntroController)   //if on level 1 intro level (special)
{
    readHighScore = readFileScr("level1")       //read level1.txt
}
if instance_exists(level1Controller)        //if player is on level 1
{
    readHighScore = readFileScr("level1")       //read level1.txt
}
else if instance_exists(level2Controller)   //if player is on level 2
{
    readHighScore = readFileScr("level2")       //read level2.txt
}
else if instance_exists(level3Controller)   //if player is on level 3
{
    readHighScore = readFileScr("level3")       //read level3.txt
}
else if instance_exists(level4Controller)   //if player is on level 4
{
    readHighScore = readFileScr("level4")       //read level4.txt
}
else if instance_exists(level5Controller)   //if player is on level 5
{
    readHighScore = readFileScr("level5")       //read level5.txt
}
else if instance_exists(level6Controller)   //if player is on level 6
{
    readHighScore = readFileScr("level6")       //read level6.txt
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if secondX &gt; 1
{
    secondX -= 1;   //subtract 1
    alarm[1] = alarmSpeed    //reset this alarm
}
else        //(if equal to 1)
{
    alarm[0] = alarmSpeed        //goto alarm 0 which adds
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if secondX == 1 &amp;&amp; wait == 0
{
    alarm[0] = waitLength
    wait = 1
}
else if secondX &lt; maxDistance
{
    secondX += 1;   //add 1
    alarm[0] = alarmSpeed    //reset this alarm
    wait = 0
}
else if secondX == maxDistance || secondX &gt; maxDistance        //(if equal to or greater than maxDistance) (it should never be greater than)
{
    alarm[1] = alarmSpeed        //goto alarm 1 which subtracts
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_alpha(1)

x=568
y=616 

if is_real(global.gameScore)
{
    gameScore = global.gameScore
}


text = "Score: " + string(gameScore) + "     Hi-Score: " + string(readHighScore)

draw_set_font(hotlineSmallFnt) 
draw_set_halign(fa_middle)

draw_set_color(colorOne)
draw_text(x,y,text)

draw_set_color(colorTwo)
draw_text(x+(secondX/2),y,text)

//draw_set_color(colorThree)
draw_set_color(colorThree)
draw_text(x+secondX,y,text)

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>17,17</point>
    <point>17,17</point>
  </PhysicsShapePoints>
</object>
