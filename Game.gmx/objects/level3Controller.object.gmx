<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>variousControllerDebugSpr</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Music, Weapon, Variables
audio_stop_all()
audio_play_sound(deathGripsFashionWeekWSnd,2,1)
audio_sound_gain(deathGripsFashionWeekWSnd,0.6,0)
//wave time
waveTime = 190      //set wave time to 190

//starting weapon level for this level
global.playerWeaponLevel = 3

//**********CONSTANTS (DO NOT CHANGE) *****************************
alarm[0] = 50       //alarm 0 to 50 steps
show_debug_message("alarm 0 set to: " + string(alarm[0]))
step = -1           //set step to -1
enemyXSpawn = 1190  //enemy's X spawn
messageY = 200      //message y to 200
messageX = 568      //message x to 568
alarm11step = 1     //set alarm 11 step to 1, this controls the end 
//**********CONSTANTS (DO NOT CHANGE) *****************************
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Background Control

background_hspeed[0] = -1
background_hspeed[1] = -1
background_hspeed[2] = -0.8
background_hspeed[3] = -30
background_hspeed[4] = -2
background_hspeed[5] = -1.2
background_hspeed[6] = -3            //rain
background_hspeed[7] = -2.5
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Monorail Controls and Sounds
monorailMoving = true
alarm[5] = 400
alarm[6] = 200

//Monorail Sounds
sound_volume(MonorailSnd,0)
sound_loop(MonorailSnd)
sound_fade(MonorailSnd,0.5,1500)   //fade monorail sound in over 1.5 seconds (1500 milliseconds)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///End of level code, triggered by dogLean outside of room event.

newScore = global.gameScore //newScore = the current game score.

if alarm11step == 1
{
    tutorialInstructionScr(568,230,"LEVEL COMPLETE#SCORE: " + string(global.gameScore),60)
    companionTalkScr("Good job!",60)
    alarm11step++;
    alarm[11]=90
    
    if readFileScr('levelsCompleted') &lt;= 3      //if levelsCompleted file is 3 or less than 3
    {
        writeFileScr('levelsCompleted', 4)      //write levelsCompleted file as 4
    }
    
}
else if alarm11step == 2
{
    /*readHighScore = readFileScr("level3")   //'readHighScore' is now = the read number from the file
    
    if newScore &gt; readHighScore
    {
        tutorialInstructionScr(568,230,"NEW HIGH SCORE: " + string(newScore), 120)
        companionTalkScr("Wow! High score!", 120)
        sound_play(americanMirrorsSnd)
        writeFileScr("level3",newScore) //write the new high score into the level.txt
        alarm11step++;
        alarm[11] = 145
    }
    else
    {
        //create darkness fade in
        instance_create(0,0,darkFadeInLevelComplete)
    
        //set alarm 10 to 85 steps, alarm[10] creates buttons
        alarm[10] = 40    
    }*/
    scoreCheckScr("level3")
    
}
else if alarm11step == 3
{
    //create darkness fade in
    instance_create(0,0,darkFadeInLevelComplete)

    //set alarm 10 to 85 steps, alarm[10] creates buttons
    alarm[10] = 40   
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///create end of level buttons, this alarm is called in alarm 11

instance_create(320, 80, nextLevelButton)
instance_create(320, 240, tryAgainButton)
instance_create(320, 400, pauseMenuMenuButton)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///STEP CONTROL / WAVE CONTROL
show_debug_message("alarm 0 triggered! (level controller)")


if step == -1
{
    tutorialInstructionScr(messageX,messageY,"LEVEL THREE..",50)
    alarm[0] = 5 * 30  // 5 seconds
}
else if step == 0
{
    tutorialInstructionScr(messageX,messageY,"START",35)
    alarm[0] = 15
}
else if step == 1
{
    spawnCatScr(catBlackGreenScarf,1)
}
else if step == 2
{
    spawnCatScr(catBlackRedScarf,2)
}
else if step == 3
{
    spawnCatScr(dummyCat,1)
    spawnCatScr(catWhitePinkScarf,1)
}
else if step == 4
{
    spawnCatScr(dummyCat,1)
    spawnCatScr(catBlackRedScarf,1)
    alarm[0]=75                                                              //shorter wave time for this wave
}
else if step == 5
{
    spawnCatScr(catBlackRedScarf,1)
    spawnObject(puppyBox)                                                           //spawn puppy in box
    companionTalkScr("What's in that box?", 3*30)                                 //companion say "what's in that box?"
}
else if step == 6
{
    spawnCatScr(dummyCat,1)
}
else if step == 7
{
    spawnCatScr(dummyCat,1)
}
else if step == 8
{   
    spawnCatScr(catBlackGreenScarf,1)
    spawnObject(magnetUpgrade)
    
}
else if step == 9
{
    spawnCatScr(catBlackGreenScarf,2)
}
else if step == 10
{
    spawnCatScr(catWhitePinkScarf,1)
    spawnCatScr(catBlackRedScarf,1)
    spawnCatScr(catBlackGreenScarf,1)
}
else if step == 11
{
    spawnCatScr(dummyCat,1)
    spawnCatScr(catBlackRedScarf,1)
    alarm[0] = 75                                                           //shorter wave time for this wave
}
else if step == 12
{
    spawnCatScr(catBlackGreenScarf,1)
    alarm[0] = 120                                                          //shorter wave time for this wave    
}
else if step == 13
{
    spawnCatScr(catBlackRedScarf,2)
}
else if step &gt;= 14
{
    if dogCanLeaveScr()
    {
        with dog instance_change(dogLean,1)
    }
    else if step &gt; 24 &amp;&amp; lives &gt; 0
    {
        with dog instance_change(dogLean,1)
        show_debug_message("dog leaving via time out.")
    }
    
    else
    {
        alarm[0] = 30   //1 second
    }
}




step += 1;             //increment step

if alarm[0] &lt; 5 //if the alarm has not already been set to a specific length in a step set it to the default waveTime for this object.
{
    alarm[0] = waveTime
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>425</id>
        <kind>4</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if alarm[0] &gt; 0
{
    show_debug_message("alarm 0 is: " + string(alarm[0]))
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>532</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_effect</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>4</kind>
            <string>10</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>1</string>
          </argument>
          <argument>
            <kind>13</kind>
            <string>12632256</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="90">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>background_hspeed[6] = get_integer("rainHSpeed","rainHSpeed")
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>50,50</point>
  </PhysicsShapePoints>
</object>
