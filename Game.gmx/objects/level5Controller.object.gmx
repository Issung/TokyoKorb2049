<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>variousControllerDebugSpr</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Music and Variables
audio_stop_all()
audio_play_sound(deathGripsFashionWeekYSnd,2,1)
audio_sound_gain(deathGripsFashionWeekYSnd,0.4,0)

//wave time
waveTime = 190      //set wave time to 190

//starting weapon level for this level
global.playerWeaponLevel = 5

//**********CONSTANTS (DO NOT CHANGE) *****************************
alarm[0] = 50       //alarm 0 to 50 steps
show_debug_message("alarm 0 set to: " + string(alarm[0]))
step = -1           //set step to -1
enemyXSpawn = 1190  //enemy's X spawn
messageY = 200      //message y to 200
messageX = 568      //message x to 568
alarm11step = 1     //set alarm 11 step to 1, this controls the end 
//**********CONSTANTS (DO NOT CHANGE) *****************************
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Background Speeds Control

background_hspeed[0] = -1
background_hspeed[1] = -1
background_hspeed[2] = -0.8
background_hspeed[3] = -30
background_hspeed[4] = -2
background_hspeed[5] = -1.2


//rain layer 1
background_hspeed[6] = -3           //rain   left   speed   (keep negative)
background_vspeed[6] = 14            //rain   down   speed   (keep positive)

//rain layer 2
background_hspeed[7] = -3.5            //rain   left   speed   (keep negative)
background_vspeed[7] = 15            //rain   down   speed   (keep positive)


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Lightning.

//lightning.
lightningTimeMin = 30*8
lightningTimeMax = 30*12

alarm[5] = irandom_range(lightningTimeMin, lightningTimeMax)
lightningStep = 0
dark = make_color_rgb(18,18,18) 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///End of level code, triggered by dogLean outside of room event.

newScore = global.gameScore //newScore = the current game score.

if alarm11step == 1
{
    tutorialInstructionScr(568,230,"LEVEL COMPLETE#SCORE: " + string(global.gameScore),60)
    companionTalkScr("Good job!",60)
    alarm11step++;
    alarm[11]=90
    
    if readFileScr('levelsCompleted') &lt;= 5      //if levelsCompleted file is 5 or less than 5
    {
        writeFileScr('levelsCompleted', 6)      //write levelsCompleted file as 6
    }
}
else if alarm11step == 2
{
    /*readHighScore = readFileScr("level5")   //'readHighScore' is now = the read number from the file
    
    if newScore &gt; readHighScore
    {
        tutorialInstructionScr(568,230,"NEW HIGH SCORE: " + string(newScore), 120)
        companionTalkScr("Wow! High score!", 120)
        sound_play(americanMirrorsSnd)
        writeFileScr("level5",newScore) //write the new high score into the level.txt
        alarm11step++;
        alarm[11] = 145
    }
    else
    {
        //create darkness fade in
        instance_create(0,0,darkFadeInLevelComplete)
        
        //set alarm 10 to 85 steps, alarm[10] creates buttons
        alarm[10] = 40     
    }*/
    scoreCheckScr("level5")
    
}
else if alarm11step == 3
{
    //create darkness fade in
    instance_create(0,0,darkFadeInLevelComplete)

    //set alarm 10 to 85 steps, alarm[10] creates buttons
    alarm[10] = 40   
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///create end of level buttons, this alarm is called in alarm 11

instance_create(320, 80, nextLevelButton)
instance_create(320, 240, tryAgainButton)
instance_create(320, 400, pauseMenuMenuButton)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Lightning.

if lightningStep == 0
{
    background_color = c_white
    lightningStep++;                //white for 2 steps     O
    alarm[5] = 2
    instance_create(0,0,lightningFlash)
    
    thunder = irandom(1)        //play thunder sound.
    if thunder == 0 {
        audio_play_sound(thunder1Snd,4,0)
    } else {
        audio_play_sound(thunder2Snd,4,0)
    }
}
else if lightningStep == 1
{
    background_color = dark
    lightningStep++;                //dark for 10 steps      
    alarm[5] = 10
    with lightningFlash instance_destroy()
}
else if lightningStep == 2
{
    background_color = c_white
    lightningStep++;                //white for 2 steps     O
    alarm[5] = 2
    instance_create(0,0,lightningFlash)
}
else if lightningStep == 3
{
    background_color = dark
    lightningStep++;                //dark for 4 steps
    alarm[5] = 4
    with lightningFlash instance_destroy()
}
else if lightningStep == 4
{
    background_color = c_white
    lightningStep++;                //white for 2 steps     O
    alarm[5] = 2
    instance_create(0,0,lightningFlash)
}
else if lightningStep == 5
{
    background_color = dark
    lightningStep=0                //dark for 10 seconds
    alarm[5] = irandom_range(lightningTimeMin, lightningTimeMax)       //set in 'create' event. between 8 and 12 seconds.
    with lightningFlash instance_destroy()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///STEP CONTROL / WAVE CONTROL
show_debug_message("alarm 0 triggered!")


if step == -1
{
    tutorialInstructionScr(messageX,messageY,"LEVEL FIVE..",50)
    alarm[0] = 70
}
else if step == 0
{
    tutorialInstructionScr(messageX,messageY,"START",35)
    alarm[0] = 15
}
else if step == 1
{
    instance_create(1145,160,catBlackYellowScarf)       //spawn yellow cat at top
    alarm[0] = 30                                       //1 second wave time
}
else if step == 2
{   
    instance_create(1145,480,catBlackYellowScarf)       //spawn yellow cat at middle
    alarm[0] = 30                                       //1 second wave time
}
else if step == 3
{
    instance_create(1145,320,catBlackYellowScarf)      //spawn yellow cat at middle
}
else if step == 4
{
    spawnCatScr(catBlackRedScarf,2)
}
else if step == 5
{
    spawnCatScr(catBlackGreenScarf,1)
    spawnCatScr(catWhitePinkScarf,1)   
}
else if step == 6
{
    spawnCatScr(dummyCat,2)
    spawnCatScr(catBlackRedScarf,1)
}
else if step == 7
{
    spawnCatScr(catBlackGreenScarf,2)
}
else if step == 8
{   
    spawnCatScr(catBlackRedScarf,1)
}
else if step == 9
{
    spawnCatScr(catFat,1)
}
else if step == 10
{
    spawnCatScr(dummyCat,1)
}
else if step == 11
{
    spawnCatScr(catBlackYellowScarf,2)
}
else if step == 12
{
     spawnCatScr(catBlackRedScarf,2)
     alarm[0] = 60
}
else if step == 13
{
    spawnCatScr(catBlackYellowScarf,2)
}
else if step == 14
{
    spawnCatScr(dummyCat,1)
}
else if step == 15
{
    spawnCatScr(catBlackGreenScarf,2)
}
else if step &gt;= 16
{
    if dogCanLeaveScr()
    {
        with dog instance_change(dogLean,1)
    }
    else if step &gt; 26 &amp;&amp; lives &gt; 0
    {
        with dog instance_change(dogLean,1)
        show_debug_message("dog leaving via time out.")
    }
    
    else
    {
        alarm[0] = 30   //1 second
    }
}




step += 1;             //increment step

if alarm[0] &lt; 5 //if the alarm has not already been set to a specific length in a step set it to the default waveTime for this object.
{
    alarm[0] = waveTime
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>50,50</point>
  </PhysicsShapePoints>
</object>
