<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>buttonSquareSpr</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>secondX = 0             //recommended value: 1
alarmSpeed = 2  
maxDistance = 14        //recommended maximum is 14
text = "6"            //recommended full capitalisation 
waitLength = 10         //amount of time for text to sit at 'first frame' of animation


//***********SET COLORS********* I RECCOMMEND USING GML BUDDY TO FIND COLOR VALUE*****
//Open gml buddy &gt; goto draw tab &gt; make color &gt; color pick.      it will give you number value.

colorOne = 16711680     //Color of first text drawn (behind text)
colorTwo = 8388863      //Color of second text drawn (middle text)
colorThree = 255        //Color of third text drawn (front text)

//***********SET COLORS*********


//**********DO NOT TOUCH********
alarm[0] = alarmSpeed
wait = 0
jumpSize =0
alphaValue = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if secondX &gt; 1
{
    secondX -= 1;   //subtract 1
    alarm[1] = alarmSpeed    //reset this alarm
}
else        //(if equal to 1)
{
    alarm[0] = alarmSpeed        //goto alarm 0 which adds
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if secondX == 1 &amp;&amp; wait == 0
{
    alarm[0] = waitLength
    wait = 1
}
else if secondX &lt; maxDistance
{
    secondX += 1;   //add 1
    alarm[0] = alarmSpeed    //reset this alarm
    wait = 0
}
else if secondX == maxDistance || secondX &gt; maxDistance        //(if equal to or greater than maxDistance) (it should never be greater than)
{
    alarm[1] = alarmSpeed        //goto alarm 1 which subtracts
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if jumpSize &gt; 0
//{
//    y -= jumpSize;
//    jumpSize -= 2;
//}




//Using just this code in this script delivers an amusing slight upwards movement and then a sudden downwards movement. (almost like gravity)
//y -= jumpSize;
//jumpSize -= 2;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set colors back to normal
colorOne = 16711680     //Color of first text drawn (behind text)
colorTwo = 8388863      //Color of second text drawn (middle text)
colorThree = 255        //Color of third text drawn (front text)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="8">
      <action>
        <libid>1</libid>
        <id>224</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_another_room</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>11</kind>
            <room>level6Room</room>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//If level unlocked goto level
if global.levelsUnlocked &gt;= 6
{
    room_goto(level6Room)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set colors back to normal
colorOne = 16711680     //Color of first text drawn (behind text)
colorTwo = 8388863      //Color of second text drawn (middle text)
colorThree = 255        //Color of third text drawn (front text)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set colors to hover 
colorOne = make_colour_rgb(190,77,181)     //Color of first text drawn (behind text)
colorTwo = make_colour_rgb(213,86,203)      //Color of second text drawn (middle text)
colorThree = make_colour_rgb(237,96,226)        //Color of third text drawn (front text)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw_set_alpha(alphaValue)
//alphaValue -= 0.01;

if global.levelsUnlocked &gt;= 6   //if level unlocked
{
    draw_set_alpha(1)      //set the alpha to full
}
else
{
    draw_set_alpha(0.3)    //set the alpha to 0.3 to show level is unavailiable 
}

//draw_get_alpha()      //returns the alpha value

drawx= x + (sprite_width / 2)
drawy= y + (sprite_height / 2)


draw_set_font(hotlineFnt) 
draw_set_halign(fa_middle)
draw_set_valign(fa_middle)

draw_set_color(colorOne)
draw_text(drawx,drawy,text)

draw_set_color(colorTwo)
draw_text(drawx+(secondX/2),drawy,text)

draw_set_color(colorThree)
draw_text(drawx+secondX,drawy,text)

//draw_text_transformed(x,y,text,1,1,10);
//draw_text_transformed(x+secondX,y+(secondX/2),text,1,1,10);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>17,17</point>
    <point>17,17</point>
  </PhysicsShapePoints>
</object>
