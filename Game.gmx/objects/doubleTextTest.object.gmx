<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>weaponUpgradeSpr</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>secondX = 1             //recommended value: 1
alarmSpeed = 1  
maxDistance = 14        //recommended maximum is 14
text = "AYY"            //recommended full capitalisation 


//***********SET COLORS********* I RECCOMMEND USING GML BUDDY TO FIND COLOR VALUE*****
//Open gml buddy &gt; goto draw tab &gt; make color &gt; color pick.      it will give you number value.

colorOne = 16711680     //Color of first text drawn (behind text)
colorTwo = 8388863      //Color of second text drawn (front text)

//***********SET COLORS*********

alarm[0] = alarmSpeed

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if secondX &gt; 1
{
    secondX -= 1;   //subtract 1
    alarm[1] = alarmSpeed    //reset this alarm
}
else        //(if equal to 1)
{
    alarm[0] = alarmSpeed        //goto alarm 0 which adds
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if secondX &lt; maxDistance
{
    secondX += 1;   //add 1
    alarm[0] = alarmSpeed    //reset this alarm
}
else        //(if equal to or greater than 7)
{
    alarm[1] = alarmSpeed        //goto alarm 1 which subtracts
}



/*
else if secondX &gt; 6
{
    while secondX &gt; 1
    {
        secondX -= 1;
    }
}
*/

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_alpha(1)

draw_set_font(hotlineFnt) 
draw_set_halign(fa_left)

draw_set_color(colorOne)
draw_text(x,y,text)

draw_set_color(colorTwo)
draw_text(x+secondX,y,text)

//draw_text_transformed(x,y,text,1,1,10);
//draw_text_transformed(x+secondX,y+(secondX/2),text,1,1,10);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
